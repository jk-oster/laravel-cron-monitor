import{_ as n,c as o,a as s,o as a}from"./app-BQQsGskr.js";const i={};function l(t,e){return a(),o("div",null,e[0]||(e[0]=[s(`<div class="hint-container warning"><p class="hint-container-title">Warning</p><p>üèóÔ∏è This Page Under Construction and not ready for use yet!</p></div><h2 id="manually-modifying-cron-monitors" tabindex="-1"><a class="header-anchor" href="#manually-modifying-cron-monitors"><span>Manually modifying cron monitors</span></a></h2><p>All configured monitors are stored in the monitors table in the database. The various monitor commands manipulate the data that table:</p><ul><li><code>cron-monitor:create</code> adds a row</li><li><code>cron-monitor:delete</code> deletes a row</li><li><code>cron-monitor:enable</code> and <code>cron-monitor:disable</code> change the value of the enabled field</li><li><code>cron-monitor:list</code> lists all rows</li><li><code>cron-monitor:sync-file</code> syncs monitors from a json file (see syncing monitors from a file)</li></ul><h3 id="manipulating-table-rows-model-properties" tabindex="-1"><a class="header-anchor" href="#manipulating-table-rows-model-properties"><span>Manipulating table rows / model properties</span></a></h3><p>You can also manually manipulate the table rows instead. Here&#39;s a description of the fields you can manipulate:</p><h2 id="syncing-monitors-from-a-file" tabindex="-1"><a class="header-anchor" href="#syncing-monitors-from-a-file"><span>Syncing monitors from a file</span></a></h2><p>Using the <code>cron-monitor:create</code> becomes tedious fast if you have a large number of urls that you wish to monitor. Luckily there&#39;s also a command to bulk import urls from a json file:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#DCDCAA;">php</span><span style="color:#CE9178;"> artisan</span><span style="color:#CE9178;"> cron-monitor:sync-file</span><span style="color:#D4D4D4;"> &lt;</span><span style="color:#CE9178;">path-to-fil</span><span style="color:#D4D4D4;">e&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Here&#39;s an example of the structure that json file should have:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#D4D4D4;">[</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#6A9955;">    // TODO</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#6A9955;">    // TODO</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>By default the command will import all missing monitors and update existing monitors. If you wish to delete cron job monitors from the database that are not in the json file you can use the <code>--delete-missing</code> flag.</p><h2 id="customizing-notifications" tabindex="-1"><a class="header-anchor" href="#customizing-notifications"><span>Customizing Notifications</span></a></h2><p>This package leverages Laravel&#39;s native notification capabilites to send out notifications.</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#CE9178;">&#39;notifications&#39;</span><span style="color:#D4D4D4;"> =&gt; [</span></span>
<span class="line"><span style="color:#D4D4D4;">    \\JkOster\\CronMonitor\\Notifications\\Notifications\\</span><span style="color:#4EC9B0;">CronCheckFailed</span><span style="color:#D4D4D4;">::</span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> =&gt; [</span><span style="color:#CE9178;">&#39;slack&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    \\JkOster\\CronMonitor\\Notifications\\Notifications\\</span><span style="color:#4EC9B0;">CronCheckRecovered</span><span style="color:#D4D4D4;">::</span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> =&gt; [</span><span style="color:#CE9178;">&#39;slack&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">],</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notice that the config keys are fully qualified class names of the Notification classes. All notifications have support for <code>slack</code> and <code>mail</code> out of the box. If you want to add support for more channels or just want to use change some text in the notifications you can specify your own notification classes in the config file. When creating custom notifications, it&#39;s probably best to extend the default ones shipped with this package.</p><h2 id="using-your-own-model" tabindex="-1"><a class="header-anchor" href="#using-your-own-model"><span>Using your own Model</span></a></h2><p>By default this package uses the <code>JkOster\\CronMonitor\\Models\\CronMonitor</code> model. If you want add some extra functionality you can specify your own model in the <code>monitor_model</code> key of the package config file. The only requirement for your custom model is that is should extend <code>JkOster\\CronMonitor\\Models\\CronMonitor</code>.</p><h2 id="verifying-incoming-cron-job-pings" tabindex="-1"><a class="header-anchor" href="#verifying-incoming-cron-job-pings"><span>Verifying incoming Cron Job Pings</span></a></h2><p>To verify that the pings reaching your application are actually from your cron job and not someone else sending a request you can use a <a href="https://laravel.com/docs/middleware#main-content" target="_blank" rel="noopener noreferrer">middleware</a> with your ping routes.</p>`,20)]))}const c=n(i,[["render",l],["__file","advanced-usage.html.vue"]]),d=JSON.parse('{"path":"/advanced-usage.html","title":"Advanced Usage","lang":"en-US","frontmatter":{"title":"Advanced Usage","description":"More in depth examples and usage of laravel cron monitor","editLink":true,"prev":{"text":"General Usage","link":"/usage.html"}},"headers":[{"level":2,"title":"Manually modifying cron monitors","slug":"manually-modifying-cron-monitors","link":"#manually-modifying-cron-monitors","children":[{"level":3,"title":"Manipulating table rows / model properties","slug":"manipulating-table-rows-model-properties","link":"#manipulating-table-rows-model-properties","children":[]}]},{"level":2,"title":"Syncing monitors from a file","slug":"syncing-monitors-from-a-file","link":"#syncing-monitors-from-a-file","children":[]},{"level":2,"title":"Customizing Notifications","slug":"customizing-notifications","link":"#customizing-notifications","children":[]},{"level":2,"title":"Using your own Model","slug":"using-your-own-model","link":"#using-your-own-model","children":[]},{"level":2,"title":"Verifying incoming Cron Job Pings","slug":"verifying-incoming-cron-job-pings","link":"#verifying-incoming-cron-job-pings","children":[]}],"git":{"updatedTime":1729618903000,"contributors":[{"name":"Jakob Osterberger","email":"98315600+jk-oster@users.noreply.github.com","commits":2},{"name":"Jakob Osterberger","email":"jo@studiomitte.com","commits":1}]},"filePathRelative":"advanced-usage.md"}');export{c as comp,d as data};
